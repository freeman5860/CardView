/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.freeman.cardview;

public final class R {
    public static final class attr {
    }
    public static final class bool {
        /**  Whether to use cheap, less good looking shadows for recents 
         */
        public static final int config_fake_shadows=0x7f070001;
        /**  Whether recents should use hardware layers for its taskviews. This flag can be enabled
    for devices where the java drawing of round rects may be slow 
         */
        public static final int config_use_hardware_layers=0x7f070000;
    }
    public static final class color {
        /**  Shadow color for the furthest pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_end_color=0x7f050005;
        /**  Shadow color for the first pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_start_color=0x7f050004;
        /**  The recents task bar dark text color to be drawn on top of light backgrounds. 
         */
        public static final int task_bar_dark_text_color=0x7f050002;
        /**  The default recents task bar background color. 
         */
        public static final int task_bar_default_background_color=0x7f050000;
        /**  The recents task bar highlight color. 
         */
        public static final int task_bar_highlight_color=0x7f050003;
        /**  The recents task bar light text color to be drawn on top of dark backgrounds. 
         */
        public static final int task_bar_light_text_color=0x7f050001;
    }
    public static final class dimen {
        /**  Used to calculate the translation animation duration, the expected amount of movement
         in dps over one second of time. 
         */
        public static final int animation_movement_in_dps_per_second=0x7f080000;
        /**  The height of a task view bar. 
         */
        public static final int deck_child_header_bar_height=0x7f08000b;
        /**  The overscroll percentage allowed on the deck. 
         */
        public static final int deck_overscroll_percentage=0x7f080002;
        /**  The top offset for the deck. 
         */
        public static final int deck_top_padding=0x7f080003;
        /**  The side padding for the deck as a percentage of the width. 
         */
        public static final int deck_width_padding_percentage=0x7f080001;
        /**  Inset shadow for FakeShadowDrawable. It is used to avoid gaps between the card
         and the shadow. 
         */
        public static final int fake_shadow_inset=0x7f08000d;
        public static final int fake_shadow_size=0x7f08000e;
        /**  The min alpha to apply to a task affiliation group color. 
         */
        public static final int task_affiliation_color_min_alpha_percentage=0x7f08000a;
        /**  The amount to offset when animating into an affiliate group. 
         */
        public static final int task_view_affiliate_group_enter_offset=0x7f080009;
        /**  The size of the application icon in the recents task view. 
         */
        public static final int task_view_application_icon_size=0x7f08000f;
        /**  The amount of highlight to make on each task view. 
         */
        public static final int task_view_highlight=0x7f080006;
        /**  The amount to translate when animating the removal of a task. 
         */
        public static final int task_view_remove_anim_translation_x=0x7f080004;
        /**  The radius of the rounded corners on a task view. 
         */
        public static final int task_view_rounded_corners_radius=0x7f080005;
        /**  The alpha to apply to a task thumbnail. 
         */
        public static final int task_view_thumbnail_alpha=0x7f08000c;
        /**  The max translation in the Z index for the last task. 
         */
        public static final int task_view_z_max=0x7f080008;
        /**  The min translation in the Z index for the last task. 
         */
        public static final int task_view_z_min=0x7f080007;
    }
    public static final class drawable {
        public static final int deck_child_view_button_bg=0x7f020000;
        public static final int deck_child_view_dismiss_dark=0x7f020001;
        public static final int deck_child_view_dismiss_light=0x7f020002;
        public static final int deck_child_view_header_bg=0x7f020003;
        public static final int deck_child_view_header_bg_color=0x7f020004;
        public static final int default_header_icon=0x7f020005;
        public static final int default_thumbnail=0x7f020006;
        public static final int ic_launcher=0x7f020007;
        public static final int rounded_background_black=0x7f020008;
    }
    public static final class id {
        public static final int activity_description=0x7f090008;
        public static final int application_icon=0x7f090007;
        public static final int deckview=0x7f090003;
        public static final int dismiss_task=0x7f090009;
        public static final int item_view_delete=0x7f090002;
        public static final int item_view_left=0x7f090000;
        public static final int item_view_right=0x7f090001;
        public static final int task_view_bar=0x7f090006;
        public static final int task_view_content=0x7f090004;
        public static final int task_view_thumbnail=0x7f090005;
    }
    public static final class integer {
        /**  The animation duration for scrolling the stack to a particular item. 
         */
        public static final int animate_deck_scroll_duration=0x7f060002;
        /**  The animation duration for animating the removal of a task view. 
         */
        public static final int animate_task_view_remove_duration=0x7f06000b;
        /**  The delay to enforce between each alt-tab key press. 
         */
        public static final int deck_alt_tab_key_delay=0x7f06000e;
        /**  Svelte specific logic, see RecentsConfiguration.SVELTE_* constants. 
         */
        public static final int deck_svelte_level=0x7f06000f;
        /**  The duration of the window transition when coming to Recents from an app.
         In order to defer the in-app animations until after the transition is complete,
         we also need to use this value as the starting delay when animating the first
         task decorations in. 
         */
        public static final int enter_from_app_transition_duration=0x7f060004;
        /**  The duration of the window transition when coming to Recents from the Launcher.
         In order to defer the in-app animations until after the transition is complete,
         we also need to use this value as the starting delay when animating the task views
         in from the bottom of the screen. 
         */
        public static final int enter_from_home_transition_duration=0x7f060005;
        /**  The min animation duration for animating views that are currently visible. 
         */
        public static final int filter_animate_current_views_duration=0x7f060000;
        /**  The min animation duration for animating views that are newly visible. 
         */
        public static final int filter_animate_new_views_duration=0x7f060001;
        /**  The minimum alpha for the dim applied to cards that go deeper into the stack. 
         */
        public static final int max_deck_view_dim=0x7f060003;
        /**  The min animation duration for animating the nav bar scrim in. 
         */
        public static final int nav_bar_scrim_enter_duration=0x7f06000d;
        /**  The duration in seconds to wait before the dismiss buttons are shown. 
         */
        public static final int task_bar_dismiss_delay_seconds=0x7f06000c;
        /**  The duration for animating the task decorations in after transitioning from an app. 
         */
        public static final int task_enter_from_app_duration=0x7f060006;
        /**  The duration for animating the task from the bottom of the screen when transitioning
     from home. 
         */
        public static final int task_enter_from_home_duration=0x7f060007;
        /**  The stagger for each task when animating the task from the bottom of the screen when
     transitioning from home. 
         */
        public static final int task_enter_from_home_stagger_delay=0x7f060008;
        /**  The duration for animating the task decorations out before transitioning to an app. 
         */
        public static final int task_exit_to_app_duration=0x7f060009;
        /**  The duration of the animation of the tasks to the bottom of the screen when leaving
     Recents to go back to the Launcher. 
         */
        public static final int task_exit_to_home_duration=0x7f06000a;
    }
    public static final class interpolator {
        public static final int decelerate_quint=0x7f040000;
        public static final int fast_out_linear_in=0x7f040001;
        public static final int fast_out_slow_in=0x7f040002;
        public static final int linear_out_slow_in=0x7f040003;
    }
    public static final class layout {
        public static final int activity_deck_view_sample=0x7f030000;
        public static final int deck_child_view=0x7f030001;
        public static final int deck_child_view_header=0x7f030002;
    }
    public static final class string {
        /**  Content description to tell the user that this button will remove an application from recents 
         */
        public static final int accessibility_item_will_be_dismissed=0x7f0a0002;
        public static final int action_settings=0x7f0a0004;
        public static final int app_name=0x7f0a0000;
        public static final int deck_view_empty_message=0x7f0a0001;
        public static final int hello_world=0x7f0a0003;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f0b0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0b0001;
    }
}
